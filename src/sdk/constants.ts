import { SpeechToTextParams } from "./file";

export const engineTypes = ["whisperx", "whisper.cpp"];
export type EngineType = (typeof engineTypes)[number];

export const speechToTextLanguages = [
  "en",
  "zh",
  "de",
  "es",
  "ru",
  "ko",
  "fr",
  "ja",
  "pt",
  "tr",
  "pl",
  "ca",
  "nl",
  "ar",
  "sv",
  "it",
  "id",
  "hi",
  "fi",
  "vi",
  "he",
  "uk",
  "el",
  "ms",
  "cs",
  "ro",
  "da",
  "hu",
  "ta",
  "no",
  "th",
  "ur",
  "hr",
  "bg",
  "lt",
  "la",
  "mi",
  "ml",
  "cy",
  "sk",
  "te",
  "fa",
  "lv",
  "bn",
  "sr",
  "az",
  "sl",
  "kn",
  "et",
  "mk",
  "br",
  "eu",
  "is",
  "hy",
  "ne",
  "mn",
  "bs",
  "kk",
  "sq",
  "sw",
  "gl",
  "mr",
  "pa",
  "si",
  "km",
  "sn",
  "yo",
  "so",
  "af",
  "oc",
  "ka",
  "be",
  "tg",
  "sd",
  "gu",
  "am",
  "yi",
  "lo",
  "uz",
  "fo",
  "ht",
  "ps",
  "tk",
  "nn",
  "mt",
  "sa",
  "lb",
  "my",
  "bo",
  "tl",
  "mg",
  "as",
  "tt",
  "haw",
  "ln",
  "ha",
  "ba",
  "jw",
  "su",
  "yue",
] as const;
export type SpeechToTextLanguage = (typeof speechToTextLanguages)[number];

export const speechToTextTasks = ["transcribe", "translate"] as const;
export type SpeechToTextTask = (typeof speechToTextTasks)[number];

export const transcribeModels = [
  "tiny",
  "tiny.en",
  "base",
  "base.en",
  "small",
  "small.en",
  "medium",
  "medium.en",
  "large",
  "large-v1",
  "large-v2",
  "large-v3",
  "large-v3-turbo",
] as const;
export type TranscribeModel = (typeof transcribeModels)[number];

export const speechToTextDevices = ["cpu", "cuda"] as const;
export type SpeechToTextDevice = (typeof speechToTextDevices)[number];

export const speechToTextComputeTypes = ["int8", "float16", "float32"] as const;
export type SpeechToTextComputeType = (typeof speechToTextComputeTypes)[number];

export const speechToTextinterpolateMethods = [
  "nearest",
  "linear",
  "ignore",
] as const;
export type SpeechToTextinterpolateMethod =
  (typeof speechToTextinterpolateMethods)[number];

export const DefaultSpeechToTextParams: SpeechToTextParams = {
  language: "en",
  task: "transcribe",
  model: "tiny.en",
  device: "cuda",
  deviceIndex: 0,
  threads: 0,
  batchSize: 8,
  chunkSize: 20,
  computeType: "float16",
  interpolateMethod: "nearest",
  returnCharAlignments: true,
  minSpeakers: 1,
  beamSize: 5,
  bestOf: 5,
  patience: 1,
  lengthPenalty: 1,
  temperatures: 0,
  compressionRatioThreshold: 2.4,
  logProbThreshold: -1,
  noSpeechThreshold: 0.6,
  suppressTokens: -1,
  vadOnset: 0.5,
  vadOffset: 0.363,
};
